(()=>{"use strict";(()=>{let e=!1,t=function(){const e=localStorage.getItem("employee_array");return e?JSON.parse(e):[]}();function n(e,t){const n=e.parentElement;let o=n.querySelector(".error-message");o||(o=document.createElement("div"),o.classList.add("error-message"),n.appendChild(o)),o.textContent=t}function o(e){const t=e.target.parentElement.querySelector(".error-message");t&&t.remove()}function l(o){o.preventDefault();const l=document.getElementById("firstName"),c=document.getElementById("lastName"),a=document.getElementById("email"),d=document.getElementById("joiningDate"),i=document.getElementById("empNo"),s=document.getElementById("mobile"),m=document.querySelector(".profile-edit-img").src,r=i.value,u=l.value,p=c.value,y=document.getElementById("dob").value,g=a.value,E=document.getElementById("locationOfEmployee").value,h=document.getElementById("departmentOfEmployee").value,f=document.getElementById("jobTitle").value,v=d.value,I=s.value,L={profilePic:m,empNo:r,name:u+" "+p,DOB:y,email:g,location:E,department:h,role:f,status:"Active",mobile:I,joiningDate:v,manager:document.getElementById("assignManagerInput").value,project:document.getElementById("assignProjectInput").value},B=/^[A-Z]+$/i;let C=!1;if(r.trim()||(n(i,"Employee ID is required"),C=!0),u.trim()||(n(l,"First name is required"),C=!0),p||(n(c,"Last name is required"),C=!0),g||(n(a,"Email is required"),C=!0),v||(n(d,"Joining date is required"),C=!0),r.trim()&&!r.match(/^[A-Z0-9]+$/i)&&(n(i,"Employee ID should contain only alphanumeric characters"),C=!0),u.trim()&&!u.match(B)&&(n(l,"First name should contain only alphabets"),C=!0),p.trim()&&!p.match(B)&&(n(c,"Last name should contain only alphabets"),C=!0),g.trim()&&!g.match(/^[A-Z0-9._%+-]+@([A-Z0-9-]+\.)+[A-Z]{2,4}$/i)&&(n(a,"Invalid email format"),C=!0),I.trim()&&!I.match(/^[\+]?[(]?[0-9]{3}[)]?[-\s\.]?[0-9]{3}[-\s\.]?[0-9]{4,6}$/im)&&(n(s,"Invalid mobile number"),C=!0),0==C){if(1==e){for(let e=0;e<t.length;e++)if(t[e].email===L.email){t.splice(e,1);break}var b=document.getElementById("update-message");b.style.display="block"}else{var k=document.getElementById("success-message");k.style.display="block"}t.push(L),localStorage.setItem("employee_array",JSON.stringify(t)),setTimeout((function(){1==e?b.style.display="none":k.style.display="none",window.location.reload(),window.location.href="Employees.html"}),1500)}}function c(e){e.preventDefault(),window.location.href="Employees.html"}document.addEventListener("DOMContentLoaded",(function(){const t=localStorage.getItem("selectedEmployeeDetails");let n=null;t&&(n=JSON.parse(t)),n&&(e=!0,document.getElementById("firstName").value=n[0].split(" ")[0],document.getElementById("lastName").value=n[0].split(" ")[1],document.getElementById("email").value=n[1],document.getElementById("locationOfEmployee").value=n[2],document.getElementById("departmentOfEmployee").value=n[3],document.getElementById("jobTitle").value=n[4],document.getElementById("empNo").value=n[5],document.getElementById("joiningDate").value=n[7].toString(),document.getElementById("mobile").value=n[8].toString(),document.querySelector(".profile-edit-img").src=n[9],document.getElementById("dob").value=n[10].toString(),document.getElementById("assignManagerInput").value=n[11],document.getElementById("assignProjectInput").value=n[12],localStorage.removeItem("selectedEmployeeDetails"));const a=document.getElementById("add-employee-form"),d=a.querySelector('button[type="submit"]');!0===e&&(d.innerText="Update"),a.addEventListener("submit",l),document.getElementById("cancel-button").addEventListener("click",c),document.getElementById("firstName").addEventListener("input",o),document.getElementById("lastName").addEventListener("input",o),document.getElementById("email").addEventListener("input",o),document.getElementById("jobTitle").addEventListener("input",o),document.getElementById("empNo").addEventListener("input",o),document.getElementById("joiningDate").addEventListener("input",o),document.getElementById("mobile").addEventListener("input",o),document.getElementById("upload-button").addEventListener("click",(function(){document.getElementById("profile-picture-input").click()})),document.getElementById("profile-picture-input").addEventListener("change",(function(e){const t=e.target,n=t.files?t.files[0]:null,o=new FileReader;o.onload=function(){const e=document.querySelector(".profile-edit-img");o.result&&(e.src=o.result.toString())},n&&o.readAsDataURL(n)}))}))})(),(()=>{let e=null,t=!1,n=!1;function o(e){if(n)return;n=!0;let t=[];t.push("Name,Date of birth,Email,Mobile,Location,Department,Role,Emp No,Status,Joining Date,Manager,Project"),e.forEach((function(e){const n=[e.name,e.DOB,e.email,e.mobile,e.location,e.department,e.role,e.empNo,e.status,e.joiningDate,e.manager,e.project];t.push(n.join(","))}));const o=t.join("\n"),l=document.createElement("a");l.setAttribute("href","data:text/csv;charset=utf-8,"+encodeURIComponent(o)),l.setAttribute("download","employee_data.csv"),l.style.display="none",document.body.appendChild(l),l.click(),document.body.removeChild(l),n=!1}function l(){const e=document.getElementById("select-all"),t=document.querySelectorAll('#employee_table input[type="checkbox"]');t.forEach((function(n){n.addEventListener("change",(function(){if(this.checked){let n=!0;t.forEach((function(e){e.checked||(n=!1)})),e.checked=n}else e.checked=!1}))}))}function c(e){const t=a(e);0===t.length?document.getElementById("employee_table").innerHTML='<tr><td colspan="9">No employee found</td></tr>':d(t)}function a(e){const n=document.getElementById("status").selectedOptions,o=Array.from(n).map((e=>e.value)),l=document.getElementById("location").selectedOptions,c=Array.from(l).map((e=>e.value)),a=document.getElementById("department").selectedOptions,d=Array.from(a).map((e=>e.value)),i=document.querySelector("#alphabets-bt .active-letter"),s=e.filter((e=>{const t=e.name.toUpperCase();let n=!1;n=!i||t.startsWith(i.textContent);const l=0===o.length||o.includes(e.status),a=0===c.length||c.includes(e.location),s=0===d.length||d.includes(e.department);return n&&l&&a&&s}));return t=null!==i||o.length>0||c.length>0||d.length>0,s}function d(e){const t=document.getElementById("employee_table");t.innerHTML="",e.forEach((function(e){const n=t.insertRow(),o=document.createElement("input");o.type="checkbox",o.setAttribute("data-empNo",e.empNo),n.insertCell(0).appendChild(o);const l=n.insertCell(1);l.style.display="flex",l.style.alignItems="center",l.innerHTML=`\n            <div>\n                <img src="${e.profilePic}" alt="Profile Pic" style="width: 40px; height: auto;border-radius: 50%;">\n            </div>\n            <div style="margin-left: 10px;">\n                <p style="padding:0;margin:0">${e.name}</p>\n                <p style="padding:0;margin:0">${e.email}</p>\n            </div>\n        `,n.insertCell(2).innerHTML=e.location,n.insertCell(3).innerHTML=e.department,n.insertCell(4).innerHTML=e.role,n.insertCell(5).innerHTML=e.empNo;const c=document.createElement("button");c.innerHTML="Active",c.classList.add("active"),n.insertCell(6).appendChild(c),n.insertCell(7).innerHTML=e.joiningDate.toString();const a=document.createElement("img");a.src="/Employee-images/dots.png",a.alt="employee options",a.classList.add("ellipsis-icon"),a.onclick=function(t){!function(e,t){const n=e.target.closest("tr"),o=localStorage.getItem("employee_array");let l=[];o&&(l=JSON.parse(o));const c=l.find((e=>e.empNo===t)),a=document.createElement("div");a.classList.add("dropdown-menu"),a.innerHTML='\n        <ul>\n            <li><a href="#" class="view-details">View Details</a></li>\n            <li><a href="#" class="edit">Edit</a></li>\n            <li><a href="#" class="delete">Delete</a></li>\n        </ul>\n    ',n.appendChild(a),a.classList.add("show");const d=e.target.getBoundingClientRect();a.style.top=d.bottom+"px",a.style.left=d.right+"px",document.addEventListener("click",(function(e){e.target.matches(".ellipsis-icon")||a.classList.remove("show")})),a.querySelector(".view-details").addEventListener("click",(function(e){e.preventDefault();const t=c.name,n=c.email,o=c.DOB,l=c.location,a=c.department,d=c.role,i=c.empNo,s=c.joiningDate,m=c.mobile,r=`\n        <html>\n        <head>\n            <title>Employee Details</title>\n        </head>\n        <body>\n            <h1>Employee Details</h1>\n            <p>Employee Number: ${i}</p>\n            <p>Name: ${t}</p>\n            <p>Date of Birth: ${o}</p>\n            <p>Email: ${n}</p>\n            <p>Location: ${l}</p>\n            <p>Department: ${a}</p>\n            <p>Role: ${d}</p>\n            <p>Joining Date: ${s}</p>\n            <p> Status: ${c.status}</p>\n            <p>Mobile: ${m}</p>\n            <p>Manager: ${c.manager}</p>\n            <p>Project: ${c.project}</P>\n        </body>\n        </html>\n        `,u=window.open();null==u||u.document.write(r)})),a.querySelector(".edit").addEventListener("click",(function(e){const t=[c.name,c.email,c.location,c.department,c.role,c.empNo,c.status,c.joiningDate,c.mobile,c.profilePic,c.DOB,c.manager,c.project];localStorage.setItem("selectedEmployeeDetails",JSON.stringify(t)),window.location.href="addEmployee.html",e.preventDefault()})),a.querySelector(".delete").addEventListener("click",(function(e){l=l.filter((e=>e.empNo!==t)),localStorage.setItem("employee_array",JSON.stringify(l)),n.remove(),e.preventDefault()}))}(t,e.empNo)},n.insertCell(8).appendChild(a)})),l(),function(){const e=document.getElementById("delete-bt"),t=document.querySelectorAll('#employee_table input[type="checkbox"]');t.forEach((function(n){n.addEventListener("change",(function(){const n=Array.from(t).some((function(e){return e.checked}));n?(e.style.backgroundColor="red",e.style.color="white"):(e.style.backgroundColor="",e.style.color="")}))}))}()}document.addEventListener("DOMContentLoaded",(function(){const n=localStorage.getItem("employee_array");let i=[];n&&(i=JSON.parse(n)),d(i),document.querySelectorAll("#alphabets-bt div").forEach((function(t){t.addEventListener("click",(function(){!function(t,n,o){e===t?(e=null,o.classList.remove("active-letter"),document.getElementById("alphabets-img").classList.remove("active-filter"),document.getElementById("select-all").checked=!1,c(n)):(e=t,document.querySelectorAll("#alphabets-bt div").forEach((function(e){e.classList.remove("active-letter")})),o.classList.add("active-letter"),document.getElementById("alphabets-img").classList.add("active-filter"),c(n))}(this.textContent,i,t)}))})),document.getElementById("apply-btn").addEventListener("click",(function(){c(i)})),document.getElementById("reset").addEventListener("click",(function(){!function(e){document.querySelectorAll(".selectpicker").forEach((e=>{$(e).val([]),$(e).selectpicker("refresh")})),document.getElementById("select-all").checked=!1,c(e)}(i)})),document.querySelectorAll("#status, #location, #department").forEach((function(e){e.addEventListener("change",(function(){Array.from(e.selectedOptions).some((function(e){return""!==e.value}))?(document.getElementById("apply-btn").style.display="block",document.getElementById("reset").style.display="block"):(document.getElementById("apply-btn").style.display="none",document.getElementById("reset").style.display="none")}))}));const s=document.getElementById("delete-bt"),m=document.querySelectorAll('#employee_table input[type="checkbox"]');document.getElementById("select-all").addEventListener("change",(function(){const e=document.getElementById("select-all"),t=document.querySelectorAll('#employee_table input[type="checkbox"]');e.checked?(t.forEach((function(e){e.checked=!0})),s.style.backgroundColor="red",s.style.color="white"):(t.forEach((function(e){e.checked=!1})),s.style.backgroundColor="",s.style.color="")})),m.forEach((function(e){e.addEventListener("change",(function(){l();const e=Array.from(m).some((function(e){return e.checked}));e?(s.style.backgroundColor="red",s.style.color="white"):(s.style.backgroundColor="",s.style.color="")}))})),document.getElementById("delete-bt").addEventListener("click",(function(){const e=document.getElementById("employee_table"),n=null==e?void 0:e.rows;let o=[];for(let e=0;e<n.length;e++){const t=n[e].cells[0].querySelector('input[type="checkbox"]');if(t.checked){const e=t.getAttribute("data-empNo"),n=i.find((t=>t.empNo===e));n&&o.push(n)}}o.length>0&&confirm("Are you sure to delete the selected employees?")&&(i=i.filter((e=>!o.includes(e))),localStorage.setItem("employee_array",JSON.stringify(i)),t?c(i):d(i),document.getElementById("select-all").checked=!1,s.style.backgroundColor="",s.style.color="")})),document.getElementById("export-but").addEventListener("click",(function(){o(1==t?a(i):i)}));let r="asc";document.querySelector("#sort-username-btn").addEventListener("click",(function(){!function(e,t){const n=t.slice();n.sort((function(t,n){const o=t.name.toLowerCase(),l=n.name.toLowerCase();return"asc"===e?o.localeCompare(l):l.localeCompare(o)})),c(n)}(r,i),r="asc"===r?"desc":"asc"}));let u="asc";document.getElementById("sort-location-btn").addEventListener("click",(function(){!function(e,t){const n=t.slice();n.sort((function(t,n){const o=t.location.toLowerCase(),l=n.location.toLowerCase();return"asc"===e?o.localeCompare(l):l.localeCompare(o)})),c(n)}(u,i),u="asc"===u?"desc":"asc"}));let p="asc";document.getElementById("sort-department-btn").addEventListener("click",(function(){!function(e,t){const n=t.slice();n.sort((function(t,n){const o=t.department.toLowerCase(),l=n.department.toLowerCase();return"asc"===e?o.localeCompare(l):l.localeCompare(o)})),c(n)}(p,i),p="asc"===p?"desc":"asc"}));let y="asc";document.getElementById("sort-role-btn").addEventListener("click",(function(){!function(e,t){const n=t.slice();n.sort((function(t,n){const o=t.role.toLowerCase(),l=n.role.toLowerCase();return"asc"===e?o.localeCompare(l):l.localeCompare(o)})),c(n)}(y,i),y="asc"===y?"desc":"asc"}));let g="asc";document.getElementById("sort-empNo-btn").addEventListener("click",(function(){!function(e,t){const n=t.slice();n.sort((function(t,n){const o=t.empNo.toLowerCase(),l=n.empNo.toLowerCase();return"asc"===e?o.localeCompare(l):l.localeCompare(o)})),c(n)}(g,i),g="asc"===g?"desc":"asc"}));let E="asc";document.getElementById("sort-joiningdate-btn").addEventListener("click",(function(){!function(e,t){const n=t.slice();n.sort((function(t,n){const o=new Date(t.joiningDate),l=new Date(n.joiningDate);return"asc"===e?o.getTime()-l.getTime():l.getTime()-o.getTime()})),c(n)}(E,i),E="asc"===E?"desc":"asc"}))}))})(),(()=>{let e=!0,t=!1;document.addEventListener("DOMContentLoaded",(function(){document.querySelectorAll(".search-imgs").forEach((e=>e.addEventListener("click",c)));const e=document.getElementById("tezo-side");null==e||e.addEventListener("click",n);const t=document.getElementById("collapse-up-button");null==t||t.addEventListener("click",l)}));const n=()=>{1==e?function(){const e=document.getElementById("tezo-logo");document.getElementById("tezo-side").style.margin="70% 0 0 10%";const t=document.getElementById("left-long-part"),n=document.getElementById("left-hidden-part");e.src="/Employee-images/tezo_icon.jpg",e.style.width="4rem",e.style.height="4rem",e.style.marginLeft="0",t.style.display="none",n.style.display="block";const l=document.getElementById("left-content"),c=document.getElementById("right-content");l.style.width="5%",c.style.width="91%",o()}():function(){document.getElementById("tezo-side").style.margin="100% 0 0 55%";const e=document.getElementById("tezo-logo");e.style.width="60%",e.style.height="90%",e.style.padding="11% 0 0 11%",e.src="/Employee-images/TezoLogo.png";const t=document.getElementById("left-long-part"),n=document.getElementById("left-hidden-part");t.style.display="block",n.style.display="none";const l=document.getElementById("left-content"),c=document.getElementById("right-content");l.style.width="20%",c.style.width="76%",o()}(),e=!e};function o(){document.getElementById("tezo-side").style.rotate=e?"180deg":"0deg"}function l(){const e=document.getElementById("collapse-up-button"),n=document.getElementById("topbar");0==t?(n.style.display="block",e.style.transform="rotate(90deg)",t=!0):(n.style.display="none",e.style.transform="rotate(90deg)",t=!1)}function c(e){const t=e.target;t.classList.add("clicked"),setTimeout((function(){t.classList.remove("clicked")}),200)}})(),(()=>{let e=!1,t=null;function n(e){const t=e.target.parentElement.querySelector(".error-message");t&&t.remove()}function o(e,t){const n=e.parentElement;let o=n.querySelector(".error-message");o||(o=document.createElement("div"),o.classList.add("error-message"),n.appendChild(o)),o.textContent=t}function l(e){const t=document.getElementById("searchResults");t.innerHTML="",e.forEach((e=>{const n=document.createElement("div");n.style.display="flex",n.style.border="1px solid grey",n.style.padding="1%",n.style.margin="1%",n.style.width="19rem",n.style.height="3rem";const o=document.createElement("img");o.src=e.profilePic,o.alt="Employee Image",o.style.width="2.5rem",o.style.height="2.5rem",o.style.borderRadius="50%",o.style.padding="2% 0 0 2%",n.appendChild(o);const l=document.createElement("div");l.style.width="1rem",n.appendChild(l);const c=document.createElement("p");c.textContent=e.name,c.style.padding="2% 0 0 0",n.appendChild(c);const a=document.createElement("input");a.type="checkbox",a.style.marginLeft="auto",a.style.marginRight=".5rem",a.style.accentColor="red",a.style.width="1.1rem",n.appendChild(a),t.appendChild(n)}))}function c(){const n=document.getElementById("roleName"),l=n.value,c=document.getElementById("departmentOfEmployee").value,d=document.getElementById("locationOfEmployee").value;let i=t,s=!1;if(l.trim()||(o(n,"Role Name is required"),s=!0),l.trim()&&!l.match(/^[A-Z ]+$/i)&&(o(n,"Role Name should contain only alphabets"),s=!0),!1===s){if(!0===e){for(let e=0;e<a.length;e++)if(a[e].id===t){a.splice(e,1);break}var m=document.getElementById("update-message");m.style.display="block"}else{i="role_"+Date.now();var r=document.getElementById("success-message");r.style.display="block"}const n={id:i,roleName:l,department:c,location:d};a.push(n),localStorage.setItem("roles_array",JSON.stringify(a)),setTimeout((function(){!0===e?m.style.display="none":r.style.display="none",window.location.reload(),window.location.href="role.html"}),1500)}}document.addEventListener("DOMContentLoaded",(function(){const o=localStorage.getItem("employee_array");let a=[];o&&(a=JSON.parse(o)),document.getElementById("searchInput").addEventListener("input",(function(e){const t=e.target.value.toLowerCase();t.length>0?l(a.filter((e=>e.name.toLowerCase().startsWith(t)))):l([])}));const i=localStorage.getItem("selectedRole");let s=null;i&&(s=JSON.parse(i)),s&&(e=!0,t=s[0],document.getElementById("roleName").value=s[1],document.getElementById("locationOfEmployee").value=s[3],document.getElementById("departmentOfEmployee").value=s[2],localStorage.removeItem("selectedRole"));const m=document.getElementById("add-role-button");1==e&&(m.innerText="Update"),m.addEventListener("click",c),document.getElementById("cancel-button").addEventListener("click",d),document.getElementById("roleName").addEventListener("input",n)}));let a=function(){const e=localStorage.getItem("roles_array");return e?JSON.parse(e):[]}();function d(e){e.preventDefault(),window.location.href="role.html"}})(),document.addEventListener("DOMContentLoaded",(function(){const e=localStorage.getItem("roles_array");let t=[];e&&(t=JSON.parse(e)),function(e){const t=document.querySelector(".allRoles");t.classList.add("allRoles"),e.forEach((function(n){const o=document.createElement("div");o.classList.add("roleBox");const l=document.createElement("section");l.classList.add("roleNameEditImg");const c=document.createElement("div");c.classList.add("roleNameHead"),c.textContent=n.roleName,l.appendChild(c);const a=document.createElement("div");a.classList.add("edit-img");const d=document.createElement("img");d.src="/Employee-images/Vertical Navbar/edit.svg",d.style.width="100%",d.style.height="100%",d.onclick=function(t){!function(e,t,n){const o=n.find((e=>e.id===t)),l=[o.id,o.roleName,o.department,o.location];localStorage.setItem("selectedRole",JSON.stringify(l)),window.location.href="newRole.html",e.preventDefault()}(t,n.id,e)},a.appendChild(d),l.appendChild(a),o.appendChild(l);const i=document.createElement("section");i.classList.add("roleDepartment");const s=document.createElement("div");s.style.width="10%";const m=document.createElement("img");m.src="/Employee-images/team_svgrepo.com.svg",m.style.width="70%",m.style.height="70%",s.appendChild(m);const r=document.createElement("div");r.classList.add("department-text"),r.textContent="Department";const u=document.createElement("div");u.classList.add("departmentNameText"),u.textContent=n.department,i.appendChild(s),i.appendChild(r),i.appendChild(u),o.appendChild(i);const p=document.createElement("section");p.classList.add("roleLocation");const y=document.createElement("div");y.style.width="10%";const g=document.createElement("img");g.src="/Employee-images/location-pin-alt-1_svgrepo.com.svg",g.style.width="70%",g.style.height="70%",y.appendChild(g);const E=document.createElement("div");E.classList.add("location-text"),E.textContent="location";const h=document.createElement("div");h.classList.add("locationNameText"),h.textContent=n.location,p.appendChild(y),p.appendChild(E),p.appendChild(h),o.appendChild(p);const f=document.createElement("section");f.classList.add("total-emp");const v=document.createElement("div");v.classList.add("total-emp-mat"),v.textContent="Total Employees";const I=document.createElement("div");I.classList.add("total-emp-img");const L=document.createElement("div");L.classList.add("image-container");const B=document.createElement("img"),C=document.createElement("img"),b=document.createElement("img"),k=document.createElement("img");B.src="/Employee-images/admin.jpg",C.src="/Employee-images/admin.jpg",b.src="/Employee-images/admin.jpg",k.src="/Employee-images/admin.jpg",L.appendChild(B),L.appendChild(C),L.appendChild(b),L.appendChild(k);const w=document.createElement("div");w.textContent="+45",w.classList.add("plus-text"),L.appendChild(w),I.appendChild(L),f.appendChild(v),f.appendChild(I),o.appendChild(f);const S=document.createElement("section");S.classList.add("view-all-emp");const N=document.createElement("span");N.classList.add("view-all-emp-mat"),N.textContent="view all employees";const D=document.createElement("img");D.src="/Employee-images/Vector.svg",D.style.width="6%",D.style.height="6%",S.appendChild(N),S.appendChild(D),o.appendChild(S),t.appendChild(o)}))}(t)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,